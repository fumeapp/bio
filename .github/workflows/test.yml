name: Run Tests
on:
  pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm i

      - name: Generate prisma deps
        run: npx prisma generate

      - name: Build and start server in the background
        env:
          NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}
        run: pnpm run dev:test:bg

      - name: Sleep for 6 seconds
        run: sleep 6

      - name: Run Migrations
        run: pnpm run db:test:reset
      - name: Run Vitest
        env:
          NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}
          NODE_ENV: test
        run: pnpm run test:coverage

      - name: Report Coverage
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          json-summary-path: ./server/coverage/coverage-summary.json
          json-final-path: ./server/coverage/coverage-final.json

      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./server/coverage/coverage-final.json
          file-coverage-mode: all
